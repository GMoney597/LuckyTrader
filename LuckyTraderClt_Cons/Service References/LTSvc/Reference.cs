//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuckyTraderClt_Cons.LTSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LTSvc.ILuckyTrader")]
    public interface ILuckyTrader {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/GetServerState", ReplyAction="http://tempuri.org/ILuckyTrader/GetServerStateResponse")]
        bool GetServerState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/GetServerState", ReplyAction="http://tempuri.org/ILuckyTrader/GetServerStateResponse")]
        System.Threading.Tasks.Task<bool> GetServerStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoRegister", ReplyAction="http://tempuri.org/ILuckyTrader/DoRegisterResponse")]
        int DoRegister(string UN, string PW, string Mail, string FN, string LN, System.DateTime Birth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoRegister", ReplyAction="http://tempuri.org/ILuckyTrader/DoRegisterResponse")]
        System.Threading.Tasks.Task<int> DoRegisterAsync(string UN, string PW, string Mail, string FN, string LN, System.DateTime Birth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoLogin", ReplyAction="http://tempuri.org/ILuckyTrader/DoLoginResponse")]
        LuckyTraderLib.UserLogin DoLogin(string UN, string PW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoLogin", ReplyAction="http://tempuri.org/ILuckyTrader/DoLoginResponse")]
        System.Threading.Tasks.Task<LuckyTraderLib.UserLogin> DoLoginAsync(string UN, string PW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoLogout", ReplyAction="http://tempuri.org/ILuckyTrader/DoLogoutResponse")]
        void DoLogout(int LogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoLogout", ReplyAction="http://tempuri.org/ILuckyTrader/DoLogoutResponse")]
        System.Threading.Tasks.Task DoLogoutAsync(int LogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/CheckStock", ReplyAction="http://tempuri.org/ILuckyTrader/CheckStockResponse")]
        LuckyTraderLib.Stock[] CheckStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/CheckStock", ReplyAction="http://tempuri.org/ILuckyTrader/CheckStockResponse")]
        System.Threading.Tasks.Task<LuckyTraderLib.Stock[]> CheckStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/ResyncUserData", ReplyAction="http://tempuri.org/ILuckyTrader/ResyncUserDataResponse")]
        bool ResyncUserData(string UN, string Loc, decimal Cash, decimal Assets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/ResyncUserData", ReplyAction="http://tempuri.org/ILuckyTrader/ResyncUserDataResponse")]
        System.Threading.Tasks.Task<bool> ResyncUserDataAsync(string UN, string Loc, decimal Cash, decimal Assets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/UpdatePlayerAssets", ReplyAction="http://tempuri.org/ILuckyTrader/UpdatePlayerAssetsResponse")]
        decimal UpdatePlayerAssets(string UN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/UpdatePlayerAssets", ReplyAction="http://tempuri.org/ILuckyTrader/UpdatePlayerAssetsResponse")]
        System.Threading.Tasks.Task<decimal> UpdatePlayerAssetsAsync(string UN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoStockTrade", ReplyAction="http://tempuri.org/ILuckyTrader/DoStockTradeResponse")]
        string DoStockTrade(string UN, string ShareTitle, decimal SharePrice, int ShareAmount, string TradeType, int SharePosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILuckyTrader/DoStockTrade", ReplyAction="http://tempuri.org/ILuckyTrader/DoStockTradeResponse")]
        System.Threading.Tasks.Task<string> DoStockTradeAsync(string UN, string ShareTitle, decimal SharePrice, int ShareAmount, string TradeType, int SharePosition);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILuckyTraderChannel : LuckyTraderClt_Cons.LTSvc.ILuckyTrader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LuckyTraderClient : System.ServiceModel.ClientBase<LuckyTraderClt_Cons.LTSvc.ILuckyTrader>, LuckyTraderClt_Cons.LTSvc.ILuckyTrader {
        
        public LuckyTraderClient() {
        }
        
        public LuckyTraderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LuckyTraderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LuckyTraderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LuckyTraderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetServerState() {
            return base.Channel.GetServerState();
        }
        
        public System.Threading.Tasks.Task<bool> GetServerStateAsync() {
            return base.Channel.GetServerStateAsync();
        }
        
        public int DoRegister(string UN, string PW, string Mail, string FN, string LN, System.DateTime Birth) {
            return base.Channel.DoRegister(UN, PW, Mail, FN, LN, Birth);
        }
        
        public System.Threading.Tasks.Task<int> DoRegisterAsync(string UN, string PW, string Mail, string FN, string LN, System.DateTime Birth) {
            return base.Channel.DoRegisterAsync(UN, PW, Mail, FN, LN, Birth);
        }
        
        public LuckyTraderLib.UserLogin DoLogin(string UN, string PW) {
            return base.Channel.DoLogin(UN, PW);
        }
        
        public System.Threading.Tasks.Task<LuckyTraderLib.UserLogin> DoLoginAsync(string UN, string PW) {
            return base.Channel.DoLoginAsync(UN, PW);
        }
        
        public void DoLogout(int LogID) {
            base.Channel.DoLogout(LogID);
        }
        
        public System.Threading.Tasks.Task DoLogoutAsync(int LogID) {
            return base.Channel.DoLogoutAsync(LogID);
        }
        
        public LuckyTraderLib.Stock[] CheckStock() {
            return base.Channel.CheckStock();
        }
        
        public System.Threading.Tasks.Task<LuckyTraderLib.Stock[]> CheckStockAsync() {
            return base.Channel.CheckStockAsync();
        }
        
        public bool ResyncUserData(string UN, string Loc, decimal Cash, decimal Assets) {
            return base.Channel.ResyncUserData(UN, Loc, Cash, Assets);
        }
        
        public System.Threading.Tasks.Task<bool> ResyncUserDataAsync(string UN, string Loc, decimal Cash, decimal Assets) {
            return base.Channel.ResyncUserDataAsync(UN, Loc, Cash, Assets);
        }
        
        public decimal UpdatePlayerAssets(string UN) {
            return base.Channel.UpdatePlayerAssets(UN);
        }
        
        public System.Threading.Tasks.Task<decimal> UpdatePlayerAssetsAsync(string UN) {
            return base.Channel.UpdatePlayerAssetsAsync(UN);
        }
        
        public string DoStockTrade(string UN, string ShareTitle, decimal SharePrice, int ShareAmount, string TradeType, int SharePosition) {
            return base.Channel.DoStockTrade(UN, ShareTitle, SharePrice, ShareAmount, TradeType, SharePosition);
        }
        
        public System.Threading.Tasks.Task<string> DoStockTradeAsync(string UN, string ShareTitle, decimal SharePrice, int ShareAmount, string TradeType, int SharePosition) {
            return base.Channel.DoStockTradeAsync(UN, ShareTitle, SharePrice, ShareAmount, TradeType, SharePosition);
        }
    }
}
